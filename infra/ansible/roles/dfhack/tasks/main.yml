---
- name: Ensure DFHack build dependencies are installed
  apt:
    name:
      - build-essential
      - cmake
      - ninja-build
      - git
      - libprotobuf-dev
      - protobuf-compiler
      - libsdl2-dev
      - libncursesw6
      - libbz2-dev
      - zlib1g-dev
      - libtinfo-dev
      - pkg-config
    state: present
    update_cache: yes
  become: yes

- name: Create DFHack build directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/dfhack-src
    - /opt/dfhack-build
  become: yes

- name: Sync DFHack source tree to target
  synchronize:
    src: "{{ playbook_dir }}/../../dfhack-work/src/"
    dest: /opt/dfhack-src/
    delete: yes
  delegate_to: localhost
  become: yes

- name: Configure DFHack
  command: >-
    cmake -S /opt/dfhack-src
          -B /opt/dfhack-build
          -G Ninja
          -DCMAKE_BUILD_TYPE=RelWithDebInfo
          -DCMAKE_INSTALL_PREFIX=/opt/dwarf-fortress
  args:
    creates: /opt/dfhack-build/build.ninja
  become: yes

- name: Build DFHack
  command: cmake --build /opt/dfhack-build -j
  become: yes

- name: Install DFHack into Dwarf Fortress bundle
  command: cmake --install /opt/dfhack-build
  become: yes

- name: Ensure DFHack config directory exists
  file:
    path: /opt/dwarf-fortress/dfhack-config
    state: directory
    mode: '0755'
  become: yes

- name: Write remote-server.json
  copy:
    dest: /opt/dwarf-fortress/dfhack-config/remote-server.json
    mode: '0644'
    content: |
      { "port": 5000, "allow_remote": false }
  notify: Restart dfhack
  become: yes

- name: Install DFHack headless systemd unit
  copy:
    dest: /etc/systemd/system/dfhack-headless.service
    mode: '0644'
    content: |
      [Unit]
      Description=DFHack headless (RPC at boot)
      After=network.target

      [Service]
      Type=simple
      WorkingDirectory=/opt/dwarf-fortress
      Environment=PRINT_MODE=TEXT
      Environment=SDL_VIDEODRIVER=dummy
      Environment=DFHACK_HEADLESS=1
      Environment=DFHACK_PORT=5000
      ExecStart=/opt/dwarf-fortress/dfhack
      Restart=always
      RestartSec=2
      PrivateNetwork=no
      StandardOutput=append:/opt/dwarf-fortress/dfhack-stdout.log
      StandardError=append:/opt/dwarf-fortress/dfhack-stderr.log

      [Install]
      WantedBy=multi-user.target
  notify: Restart dfhack
  become: yes

- name: Enable dfhack-headless service
  systemd:
    name: dfhack-headless
    enabled: true
  become: yes

- name: Verify DFHack RPC listener is active
  shell: "ss -lntp | grep -E '127\\.0\\.0\\.1:5000.+dwarfort'"
  register: dfhack_listener
  changed_when: false
  failed_when: dfhack_listener.rc != 0
  become: yes

- name: Verify dfhack-run can connect
  shell: "cd /opt/dwarf-fortress && ./dfhack-run help >/dev/null"
  changed_when: false
  become: yes

handlers:
  - name: Restart dfhack
    systemd:
      name: dfhack-headless
      state: restarted
      daemon_reload: true
    become: yes
